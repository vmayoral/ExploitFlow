# Copyright 2022 Víctor Mayoral-Vilches. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A exploit flow that performs simple reconnaissance
#
# ┌─────────────────────────────────────────────────────────────────────────────────────────────────────┐
# │                                                Init                                                 │
# └─────────────────────────────────────────────────────────────────────────────────────────────────────┘
#   │
#   │ {'exploits': [], 'ports': []}
#   ▼
# ┌─────────────────────────────────────────────────────────────────────────────────────────────────────┐
# │                                         FakeVersionExploit                                          │
# └─────────────────────────────────────────────────────────────────────────────────────────────────────┘
#   │
#   │ {'exploits': ['FakeVersionExploit'], 'ports': ['21|fake||None', '23|fake||None', '31|fake||None']}
#   ▼
# ┌─────────────────────────────────────────────────────────────────────────────────────────────────────┐
# │                                                 Mul                                                 │
# └─────────────────────────────────────────────────────────────────────────────────────────────────────┘

import exploitflow as ef
# from exploitflow.state import State_v0

flow = ef.Flow()
init = ef.Init()

# reconnaissance action
# recon = ef.Versions(ports=ef.state.TARGET_PORTS_OSX)
recon = ef.FakeVersions(name="FakeVersionExploit")  # fake port scanning to speed things up

# initialize state and pass it over a recon action
# resulting flow should deliver a state annotated
# with the results from the reconnaissance step
state = flow.run(init * recon, target="127.0.0.1")
# print(state)

# ASCII-depict graph
print(flow.ascii())
