# Copyright 2022 VÃ­ctor Mayoral-Vilches. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from shlex import quote
from subprocess import PIPE, run as _run
import sys
from pathlib import Path


def run(cmdargs, *args, check=True, **kw):
    """Wrap subprocess.run optionally echoing commands."""
    cwd = kw.pop("cwd", None)
    if isinstance(cwd, Path):
        cwd = bytes(cwd)
    kw["cwd"] = cwd

    if check == "exit":
        cp = _run(cmdargs, *args, check=False, **kw)
        if cp.returncode != 0:
            cmd = " ".join([quote(x) for x in cmdargs])
            print(
                "ERROR: Command return non-zero exit code (see above): {}\n  {}".format(
                    cp.returncode, cmd
                ),
                file=sys.stderr,
            )
            sys.exit(cp.returncode)
    else:
        cp = _run(cmdargs, *args, check=check, **kw)

    return cp


def runout(*args, **kw):
    """Run cmd and return its stdout."""
    return run(*args, **kw, stdout=PIPE).stdout.decode("utf-8")


def shell(cmd, *args, check=True, **kw):
    """Run cmd through shell."""
    return run(cmd, *args, shell=True, check=check, **kw)


def shellout(*args, **kw):
    """Run cmd through shell and return its stdout."""
    return shell(*args, **kw, stdout=PIPE).stdout.decode("utf-8")
